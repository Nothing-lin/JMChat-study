<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.nothinglin.newqitalk">


    <!-- Required -->
    <permission
        android:name="com.nothinglin.newqitalk.permission.JPUSH_MESSAGE"
        android:protectionLevel="signature" />
    <uses-permission android:name="com.nothinglin.newqitalk.permission.JPUSH_MESSAGE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <!-- Optional. Required for location feature -->
    <!-- 为了提高sdk识别唯一用户的能力，保证消息推送的精准送达，建议集成以下权限（可选）-->
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.QUERY_ALL_PACKAGES"
        tools:ignore="QueryAllPackagesPermission" />
    <uses-permission android:name="android.permission.GET_TASKS" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />

    <!-- 如您需要接入地理围栏业务，建议集成以下权限（可选）-->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS" />

    <!-- 如您需要对应设备通知相关的能力，建议集成以下权限（可选）-->
    <uses-permission android:name="com.huawei.android.launcher.permission.CHANGE_BADGE" /><!-- 华为角标 -->
    <uses-permission android:name="com.vivo.notification.permission.BADGE_ICON" /><!-- VIVO角标权限 -->
    <uses-permission android:name="android.permission.VIBRATE" /><!--振动器权限，JPUSH支持通知开启振动功能，小米推送必须-->

    <!-- 扩展备用权限（可选）-->
    <permission android:name="${applicationId}.permission.JOPERATE_MESSAGE" android:protectionLevel="signature"/>
    <uses-permission android:name="${applicationId}.permission.JOPERATE_MESSAGE" />











    <application
        android:name=".application.MyApplication"
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.NewQiTalk"
        tools:targetApi="31">




        <!--页面注册  必须注册，否则无法显示-->
        <activity
            android:name=".activity.LaunchActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <activity android:name=".MainActivity"/>
        <activity android:name=".activity.LoginActivity"/>









        <!-- Required SDK 核心功能-->
        <!-- 可配置 android:process 参数将 PushService 放在其他进程中 -->
        <service
            android:name="cn.jpush.android.service.PushService"
            android:enabled="true"
            android:exported="false" >
            <intent-filter>
                <action android:name="cn.jpush.android.intent.REGISTER" />
                <action android:name="cn.jpush.android.intent.REPORT" />
                <action android:name="cn.jpush.android.intent.PushService" />
                <action android:name="cn.jpush.android.intent.PUSH_TIME" />
            </intent-filter>
        </service>


        <!-- since 3.0.9 Required SDK 核心功能-->
        <provider
            android:authorities="com.nothinglin.newqitalk.DataProvider"
            android:name="cn.jpush.android.service.DataProvider"
            android:exported="false"
            />

        <!-- since 1.8.0 option 可选项。用于同一设备中不同应用的 JPush 服务相互拉起的功能。 -->
        <!-- 若不启用该功能可删除该组件，或把 enabled 设置成 false ；App 不会被其他 App 拉起，但会拉起其他的 App。 -->
        <service
            android:name="cn.jpush.android.service.DaemonService"
            android:enabled="true"
            android:exported="true">
            <intent-filter >
                <action android:name="cn.jpush.android.intent.DaemonService" />
                <category android:name="com.nothinglin.newqitalk"/>
            </intent-filter>
        </service>

        <!-- since 3.1.0 Required SDK 核心功能-->
        <provider
            android:authorities="com.nothinglin.newqitalk.DownloadProvider"
            android:name="cn.jpush.android.service.DownloadProvider"
            android:exported="true"
            />

        <!-- Required SDK 核心功能-->
        <receiver
            android:name="cn.jpush.android.service.PushReceiver"
            android:enabled="true"
            android:exported="false">
            <intent-filter android:priority="1000">
                <action android:name="cn.jpush.android.intent.NOTIFICATION_RECEIVED_PROXY" />
                <category android:name="com.nothinglin.newqitalk"/>
            </intent-filter>
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
            </intent-filter>
            <!-- Optional -->
            <intent-filter>
                <action android:name="android.intent.action.PACKAGE_ADDED" />
                <action android:name="android.intent.action.PACKAGE_REMOVED" />
                <data android:scheme="package" />
            </intent-filter>
        </receiver>





        <!-- Required SDK 核心功能-->
        <activity
            android:name="cn.jpush.android.ui.PushActivity"
            android:configChanges="orientation|keyboardHidden"
            android:theme="@android:style/Theme.NoTitleBar"
            android:exported="true" >
            <intent-filter>
                <action android:name="cn.jpush.android.ui.PushActivity" />
                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="com.nothinglin.newqitalk" />
            </intent-filter>
        </activity>
        <!-- SDK 核心功能-->
        <activity
            android:name="cn.jpush.android.ui.PopWinActivity"
            android:configChanges="orientation|keyboardHidden"
            android:exported="true"
            android:theme="@style/MyDialogStyle">
            <intent-filter>
                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="com.nothinglin.newqitalk" />
            </intent-filter>
        </activity>

        <!-- 注意此配置在 JPush 3.2.0 及以前版本是必须配置，3.2.0 以后版本已废弃此配置-->
<!--        <service-->
<!--            android:name="cn.jpush.android.service.DownloadService"-->
<!--            android:enabled="true"-->
<!--            android:exported="false" >-->
<!--        </service>-->

        <!-- Since JCore2.0.0 Required SDK核心功能-->
        <!-- 可配置android:process参数将Service放在其他进程中；android:enabled属性不能是false -->
        <!-- 这个是自定义Service，要继承极光JCommonService，可以在更多手机平台上使得推送通道保持的更稳定 -->
        <service android:name=".service.CustomService"
            android:enabled="true"
            android:exported="false"
            android:process=":pushcore">
            <intent-filter>
                <action android:name="cn.jiguang.user.service.action" />
            </intent-filter>
        </service>

        <!-- Required SDK 核心功能-->
        <receiver android:name="cn.jpush.android.service.AlarmReceiver" />

        <!-- Required since 3.0.7 -->
        <!-- 新的 tag/alias 接口结果返回需要开发者配置一个自定的广播 -->
        <!-- 3.3.0开始所有事件将通过该类回调 -->
        <!-- 该广播需要继承 JPush 提供的 JPushMessageReceiver 类, 并如下新增一个 Intent-Filter -->
<!--        <receiver-->
<!--            android:name="自定义 Receiver"-->
<!--            android:enabled="true"-->
<!--            android:exported="false" >-->
<!--            <intent-filter>-->
<!--                <action android:name="cn.jpush.android.intent.RECEIVE_MESSAGE" />-->
<!--                <category android:name="您应用的包名" />-->
<!--            </intent-filter>-->
<!--        </receiver>-->

        <!-- User defined. 用户自定义的广播接收器-->
        <!-- 这是3.3.0之前版本的接收方式，3.3.0开始是通过继承 JPushMessageReceiver并配置来接收所有事件回调。>
        <!- 如果仍然需要在这个Receiver里接收，需要在JPushMessageReceiver 的子类里不重写对应的回调方法，或者重写方法且调用super-->
<!--        <receiver-->
<!--            android:name="您自己定义的 Receiver"-->
<!--            android:enabled="true"-->
<!--            android:exported="false">-->
<!--            <intent-filter>-->
<!--                &lt;!&ndash;Required 用户注册 SDK 的 intent&ndash;&gt;-->
<!--                <action android:name="cn.jpush.android.intent.REGISTRATION" />-->
<!--                &lt;!&ndash;Required 用户接收 SDK 消息的 intent&ndash;&gt;-->
<!--                <action android:name="cn.jpush.android.intent.MESSAGE_RECEIVED" />-->
<!--                &lt;!&ndash;Required 用户接收 SDK 通知栏信息的 intent&ndash;&gt;-->
<!--                <action android:name="cn.jpush.android.intent.NOTIFICATION_RECEIVED" />-->
<!--                &lt;!&ndash;Required 用户打开自定义通知栏的 intent&ndash;&gt;-->
<!--                <action android:name="cn.jpush.android.intent.NOTIFICATION_OPENED" />-->
<!--                &lt;!&ndash; 接收网络变化 连接/断开 since 1.6.3 &ndash;&gt;-->
<!--                <action android:name="cn.jpush.android.intent.CONNECTION" />-->
<!--                <category android:name="com.nothinglin.newqitalk" />-->
<!--            </intent-filter>-->
<!--        </receiver>-->

        <!-- User defined. 用户自定义 Receiver 接收被拉起回调-->
        <!-- 自定义 Receiver 组件，继承cn.jpush.android.service.WakedResultReceiver类,复写onWake(int wakeType)或 onWake(Context context, int wakeType)方法以监听被拉起 -->
<!--        <receiver android:name="xx.xx.xx.MyWakedResultReceiver">-->
<!--            <intent-filter>-->
<!--                <action android:name="cn.jpush.android.intent.WakedReceiver" />-->
<!--                <category android:name="${applicationId}" />-->
<!--            </intent-filter>-->
<!--        </receiver>-->

        <!--Required SDK核心功能 since 3.3.0-->
        <activity
            android:name="cn.jpush.android.service.JNotifyActivity"
            android:exported="true"
            android:taskAffinity="jpush.custom"
            android:theme="@style/JPushTheme">
            <intent-filter>
                <action android:name="cn.jpush.android.intent.JNotifyActivity" />
                <category android:name="android.intent.category.DEFAULT" /><!--Required SDK核心功能 since 4.2.2-->
                <category android:name="com.nothinglin.newqitalk" />
            </intent-filter>
        </activity>

        <!-- Required. For publish channel feature -->
        <!-- JPUSH_CHANNEL 是为了方便开发者统计 APK 分发渠道。-->
        <!-- 例如: -->
        <!-- 发到 Google Play 的 APK 可以设置为 google-play; -->
        <!-- 发到其他市场的 APK 可以设置为 xxx-market。 -->
        <meta-data android:name="JPUSH_CHANNEL" android:value="developer-default"/>
        <!-- Required. AppKey copied from Portal -->
        <meta-data android:name="JPUSH_APPKEY" android:value="8b736ae34c4b84b3f379e788"/>

    </application>



</manifest>